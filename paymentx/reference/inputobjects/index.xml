<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation â€“ Input objects</title>
    <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/</link>
    <description>Recent changes in Input objects on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <image>
      <url>https://docs.travelgatex.com/img/hugo.png</url>
      <title>GoHugo.io</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/</link>
    </image>
    
	    <atom:link href="https://docs.travelgatex.com/paymentx/reference/inputobjects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Paymentx: AccessFilter</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/accessfilter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/accessfilter/</guid>
      <description>
        
        
         GraphQL schema definition type AccessFilter {accessID: [ID] group: [ID] owner: [ID!] Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields accessID([ID]):group([ID]):owner([ID!]): 
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: ClientFilter</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/clientfilter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/clientfilter/</guid>
      <description>
        
        
        GraphQL schema definition type ClientFilter {clientID: [ID] name: [String!] groupID: [ID] isActive: Boolean owner: [ID!] Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields clientID([ID]):name([String!]):groupID([ID]):isActive(Boolean):owner([ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: ExpireDateInput</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/expiredateinput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/expiredateinput/</guid>
      <description>
        
        
         GraphQL schema definition type ExpireDateInput {month: Int! year: Int! Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields month(Int!):year(Int!): Required by PaymentXStoredCardInput:  
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: HolderInput</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/holderinput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/holderinput/</guid>
      <description>
        
        
         GraphQL schema definition type HolderInput {name: String! surname: String! Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields name(String!):surname(String!): Required by PaymentXStoredCardFilterInput: PaymentXStoredCardInput:  
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: PaymentXStoredCardFilterInput</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardfilterinput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardfilterinput/</guid>
      <description>
        
        
        GraphQL schema definition type PaymentXStoredCardFilterInput {AND: [PaymentXStoredCardFilterInput!] OR: [PaymentXStoredCardFilterInput!] checkIn_in: [DateTime!] checkIn_not_in: [DateTime!] checkIn_lt: DateTime checkIn_lte: DateTime checkIn_gt: DateTime checkIn_gte: DateTime checkOut_in: [DateTime!] checkOut_not_in: [DateTime!] checkOut_lt: DateTime checkOut_lte: DateTime checkOut_gt: DateTime checkOut_gte: DateTime holder_like: HolderInput Show deprecated fields}window.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: PaymentXStoredCardIDInput</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardidinput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardidinput/</guid>
      <description>
        
        
         GraphQL schema definition type PaymentXStoredCardIDInput {instanceCode: ID pointOfSaleCode: ID bookingReference: String code: ID Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields instanceCode(ID):pointOfSaleCode(ID):bookingReference(String):code(ID): 
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: PaymentXStoredCardInput</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardinput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/paymentxstoredcardinput/</guid>
      <description>
        
        
        GraphQL schema definition type PaymentXStoredCardInput {instanceCode: ID! pointOfSaleCode: ID! bookingReference: String! checkOut: Date checkIn: Date cardType: String holder: HolderInput number: CardNumber! CVC: CVC! expire: ExpireDateInput! Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Paymentx: SupplierFilter</title>
      <link>https://docs.travelgatex.com/paymentx/reference/inputobjects/supplierfilter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/paymentx/reference/inputobjects/supplierfilter/</guid>
      <description>
        
        
        GraphQL schema definition type SupplierFilter {supplierID: [ID] accessID: [ID] groupID: [ID] isActive: Boolean serviceAPI: [Int] owner: [ID!] Show deprecated fields}window.onload = _ = {const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0];if (deprecatedContainer.children.length) {const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0];list.style.display = &#39;block&#39;;console.log(list.style);}}Fields supplierID([ID]):accessID([ID]):groupID([ID]):isActive(Boolean):serviceAPI([Int]):owner([ID!
        
          [...]
        
      </description>
    </item>
    
  </channel>
</rss>