<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation â€“ Booking Flow</title>
    <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/</link>
    <description>Recent changes in Booking Flow on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <image>
      <url>https://docs.travelgatex.com/img/hugo.png</url>
      <title>GoHugo.io</title>
      <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/</link>
    </image>
    
	    <atom:link href="https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hotel-X: Search</title>
      <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/search/</guid>
      <description>
        
        
        Search is the first operation in the booking flow. It allows to check which available rooms there are for the requested hotels or for the hotels in the requested destination for a given range of dates and for a given pax distribution. The operation could search over one or more sellers accesses.
Depending seller, search operations involves use supplier&amp;rsquo;s cache.
It returns a list of available options according to your search criteria.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Quickstart</title>
      <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/quickstart/</guid>
      <description>
        
        
        const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;; const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;; $(document).ready(main); function main() { const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/6972ecae51e849fe8c49305bf0032dfe\/raw\x22,\x22divname\x22:\x22div_authorization\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/alexjmoya\/b5dff8d1ec9c6f61dc0392a20558be67\/raw\x22,\x22divname\x22:\x22div_search\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/alexjmoya\/f6d343260df0e75ab636779c2e00db39\/raw\x22,\x22divname\x22:\x22div_quote\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/alexjmoya\/64dfb6604667ee86399b7857708830e9\/raw\x22,\x22divname\x22:\x22div_book\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/alexjmoya\/f2933df3054688d8a3551ca3cb16bf90\/raw\x22,\x22divname\x22:\x22div_cancel\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/alexjmoya\/78fcc6ec8ba6c7535d39f687aa0e714d\/raw\x22,\x22divname\x22:\x22div_bookinglist\x22}]&#39;; const queries = JSON.parse(q); for (const q of queries) { iterateQueries(q) } } function iterateQueries(q) { if(!q.gist.includes(&#39;http&#39;)) return; $.get(q.gist, function (data) { q.data = data; renderGist(q); }); } function renderGist(q) { var fetchURL = &#39;https://api.travelgatex.com&#39;; var search = window.location.search; var parameters = {}; search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) { var eq = entry.indexOf(&#39;=&#39;); if (eq = 0) { parameters[decodeURIComponent(entry.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Quote</title>
      <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/quote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/quote/</guid>
      <description>
        
        
        Quote is an operation used to assess and valuate the rate before the actual booking. It returns the same information as the Search response for a hotel rate with up-to-date price, along with additional information regarding the rate: rate breakdown and cancellation policies.
Advanced criteria There are different parameters that can be set up in the request (The below ones are mandatory)
 optionRefId: Identifier of the option chosen in Search.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Book</title>
      <link>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/howtos/quickstart/bookingflow/book/</guid>
      <description>
        
        
        const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;; const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;; $(document).ready(main); function main() { const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/31d4d32ea8e8bc8ab5d7bc3910df72c0\/raw\x22,\x22divname\x22:\x22div_booking\x22}]&#39;; const queries = JSON.parse(q); for (const q of queries) { iterateQueries(q) } } function iterateQueries(q) { if(!q.gist.includes(&#39;http&#39;)) return; $.get(q.gist, function (data) { q.data = data; renderGist(q); }); } function renderGist(q) { var fetchURL = &#39;https://api.travelgatex.com&#39;; var search = window.location.search; var parameters = {}; search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) { var eq = entry.indexOf(&#39;=&#39;); if (eq = 0) { parameters[decodeURIComponent(entry.
        
          [...]
        
      </description>
    </item>
    
  </channel>
</rss>