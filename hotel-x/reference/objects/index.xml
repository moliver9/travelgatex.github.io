<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation â€“ Objects</title>
    <link>https://docs.travelgatex.com/hotel-x/reference/objects/</link>
    <description>Recent changes in Objects on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <image>
      <url>https://docs.travelgatex.com/img/hugo.png</url>
      <title>GoHugo.io</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/</link>
    </image>
    
	    <atom:link href="https://docs.travelgatex.com/hotel-x/reference/objects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hotel-X: AddOn</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/addon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/addon/</guid>
      <description>
        
        
        GraphQL schema definition type AddOn {  key: String!    value: JSON!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields key(String!):   value(JSON!):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: AddOns</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/addons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/addons/</guid>
      <description>
        
        
        GraphQL schema definition type AddOns {  distribution: [AddOn!]   Show deprecated fields   distribute: : JSON // deprecated from 2018-05-21 You can find it in distribution AddOn     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields distribute(JSON):   distribution([AddOn!]):
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: AdviseMessage</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/advisemessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/advisemessage/</guid>
      <description>
        
        
        GraphQL schema definition type AdviseMessage {  code: ID!    description: String!    level: AdviseMessageLevel!    external: ExternalMessage    correlationID: ID!   Show deprecated fields   type: : String! // deprecated from 2018-06-01     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Airport</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/airport/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/airport/</guid>
      <description>
        
        
        GraphQL schema definition type Airport {  code: ID!    airportData: AirportData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   airportData(AirportData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: AirportData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/airportdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/airportdata/</guid>
      <description>
        
        
        GraphQL schema definition type AirportData {  code: ID!    name: String    location: Location   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   name(String):   location(Location):   
Required by Airport:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Amenity</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/amenity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/amenity/</guid>
      <description>
        
        
        GraphQL schema definition type Amenity {  code: String!    type: ApplicationAreaType!    texts( languages: [Language!], ): [Text!]!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String!):   type(ApplicationAreaType!):   texts([Text!]!):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: AuditData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/auditdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/auditdata/</guid>
      <description>
        
        
        GraphQL schema definition type AuditData {  transactions: [Transactions!]!    timeStamp: DateTime!    processTime: Float!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields transactions([Transactions!]!):   timeStamp(DateTime!):   processTime(Float!):   
Required by HotelSearch:    HotelQuote:    HotelBooking:    Response:    HotelBookPayload:    HotelCancelPayload:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Bed</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/bed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/bed/</guid>
      <description>
        
        
        GraphQL schema definition type Bed {  type: String    count: Int    shared: Boolean   Show deprecated fields   description: : String // Deprecated from 2019-07-29     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields type(String):   description(String):   count(Int):   shared(Boolean):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Board</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/board/</guid>
      <description>
        
        
        GraphQL schema definition type Board {  code: ID!    boardData: BoardData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   error: : [Error!] // Deprecated from 2019-07-03     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BoardConnection</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/boardconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/boardconnection/</guid>
      <description>
        
        
        GraphQL schema definition type BoardConnection {  edges: [BoardEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([BoardEdge]):   pageInfo(PageInfo!):   
Required by HotelXQuery:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BoardData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/boarddata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/boarddata/</guid>
      <description>
        
        
        GraphQL schema definition type BoardData {  code: ID!    boardCode: String!    texts( languages: [Language!], ): [Text!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   boardCode(String!):   texts([Text!]):   
Required by Board:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BoardEdge</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/boardedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/boardedge/</guid>
      <description>
        
        
        GraphQL schema definition type BoardEdge {  node: Board    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Board):   cursor(String!):   
Required by BoardConnection:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BookingHotel</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/bookinghotel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/bookinghotel/</guid>
      <description>
        
        
        GraphQL schema definition type BookingHotel {  bookingDate: Date    start: Date    end: Date    hotelCode: String    hotelName: String    boardCode: String    occupancies: [Occupancy!]    rooms: [BookingRoom!]   Show deprecated fields   creationDate: : Date // deprecated from 2018-02-28 Incorrect date format.     checkIn: : Date // deprecated from 2018-02-28 Incorrect date format.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BookingRoom</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/bookingroom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/bookingroom/</guid>
      <description>
        
        
        GraphQL schema definition type BookingRoom {  occupancyRefId: Int    code: String    description: String    price: Price   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields occupancyRefId(Int):   code(String):   description(String):   price(Price):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: BusinessRules</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/businessrules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/businessrules/</guid>
      <description>
        
        
        GraphQL schema definition type BusinessRules {  optionsQuota: Int!    businessRulesType: BusinessRulesType!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields optionsQuota(Int!):   businessRulesType(BusinessRulesType!):   
Required by HotelXDefaultSettingsData:    HotelXCommonSettingsData:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CancelPenalty</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/cancelpenalty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/cancelpenalty/</guid>
      <description>
        
        
        GraphQL schema definition type CancelPenalty {  hoursBefore: Int!    penaltyType: CancelPenaltyType!    currency: Currency!    value: Float!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields hoursBefore(Int!):   penaltyType(CancelPenaltyType!):   currency(Currency!):   value(Float!):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CancelPolicy</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/cancelpolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/cancelpolicy/</guid>
      <description>
        
        
        GraphQL schema definition type CancelPolicy {  refundable: Boolean!    cancelPenalties: [CancelPenalty!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields refundable(Boolean!):   cancelPenalties([CancelPenalty!]):   
Required by HotelOptionSearch:    HotelOptionQuote:    HotelBookingDetail:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Category</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/category/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/category/</guid>
      <description>
        
        
        GraphQL schema definition type Category {  code: ID!    categoryData: CategoryData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   error: : [Error!] // Deprecated from 2019-07-03     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CategoryConnection</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/categoryconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/categoryconnection/</guid>
      <description>
        
        
        GraphQL schema definition type CategoryConnection {  edges: [CategoryEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([CategoryEdge]):   pageInfo(PageInfo!):   
Required by HotelXQuery:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CategoryData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/categorydata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/categorydata/</guid>
      <description>
        
        
        GraphQL schema definition type CategoryData {  code: ID!    categoryCode: String!    texts( languages: [Language!], ): [Text!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   categoryCode(String!):   texts([Text!]):   
Required by Category:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CategoryEdge</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/categoryedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/categoryedge/</guid>
      <description>
        
        
        GraphQL schema definition type CategoryEdge {  node: Category    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Category):   cursor(String!):   
Required by CategoryConnection:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Contact</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/contact/</guid>
      <description>
        
        
        GraphQL schema definition type Contact {  email: String    telephone: String    fax: String    web: URI   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields email(String):   telephone(String):   fax(String):   web(URI):
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Coordinates</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/coordinates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/coordinates/</guid>
      <description>
        
        
        GraphQL schema definition type Coordinates {  latitude: Float!    longitude: Float!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields latitude(Float!):   longitude(Float!):   
Required by Location:    GeonameData:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: CriteriaSearch</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/criteriasearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/criteriasearch/</guid>
      <description>
        
        
        GraphQL schema definition type CriteriaSearch {  checkIn: Date!    checkOut: Date!    hotels: [String!]!    occupancies: [RoomCriteria!]!    language: Language    currency: Currency    nationality: Country    market: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Description</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/description/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/description/</guid>
      <description>
        
        
        GraphQL schema definition type Description {  type: DescriptionType!    texts: [Text!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields type(DescriptionType!):   texts([Text!]):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Destination</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/destination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/destination/</guid>
      <description>
        
        
        GraphQL schema definition type Destination {  code: ID!    destinationData: DestinationData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   error: : [AdviseMessage!] // Deprecated from 2019-07-03     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: DestinationConnection</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/destinationconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/destinationconnection/</guid>
      <description>
        
        
        GraphQL schema definition type DestinationConnection {  edges: [DestinationEdge]    token: String!    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([DestinationEdge]):   token(String!):   pageInfo(PageInfo!):   
Required by HotelXQuery:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: DestinationData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/destinationdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/destinationdata/</guid>
      <description>
        
        
        GraphQL schema definition type DestinationData {  code: ID!    available: Boolean!    destinationLeaf: [String!]    texts( languages: [Language!], ): [Text!]!    closestDestinations: [String!]    parent: String    type: DestinationType   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: DestinationEdge</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/destinationedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/destinationedge/</guid>
      <description>
        
        
        GraphQL schema definition type DestinationEdge {  node: Destination    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Destination):   cursor(String!):   
Required by DestinationConnection:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Error</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/error/</guid>
      <description>
        
        
        GraphQL schema definition type Error {  code: String!    type: String!    description: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String!):   type(String!):   description(String!):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Exchange</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/exchange/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/exchange/</guid>
      <description>
        
        
        GraphQL schema definition type Exchange {  currency: Currency!    rate: Float!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields currency(Currency!):   rate(Float!):   
Required by Price:    Markup:    Priceable:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: ExternalMessage</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/externalmessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/externalmessage/</guid>
      <description>
        
        
        GraphQL schema definition type ExternalMessage {  code: String    message: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String):   message(String!):   
Required by AdviseMessage:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Feature</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/feature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/feature/</guid>
      <description>
        
        
        GraphQL schema definition type Feature {  code: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String!):
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Geoname</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/geoname/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/geoname/</guid>
      <description>
        
        
        GraphQL schema definition type Geoname {  code: ID!    geonameData: GeonameData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   geonameData(GeonameData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: GeonameData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/geonamedata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/geonamedata/</guid>
      <description>
        
        
        GraphQL schema definition type GeonameData {  code: ID!    name: String!    parent: Geoname!    country: Country    type: String!    coordinates: Coordinates!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: GiataData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/giatadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/giatadata/</guid>
      <description>
        
        
        GraphQL schema definition type GiataData {  id: ID!    source: URI!    href: URI!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields id(ID!):   source(URI!):   href(URI!):   updatedAt(DateTime!):
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Holder</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/holder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/holder/</guid>
      <description>
        
        
        GraphQL schema definition type Holder {  name: String!    surname: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields name(String!):   surname(String!):   
Required by HotelBookingDetail:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: Hotel</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotel/</guid>
      <description>
        
        
        GraphQL schema definition type Hotel {  code: ID!    hotelData: HotelData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   error: : [AdviseMessage!] // Deprecated from 2019-07-03     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelBookPayload</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbookpayload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbookpayload/</guid>
      <description>
        
        
        GraphQL schema definition type HotelBookPayload {  stats( token: String!, ): StatsRequest    auditData: AuditData    booking: HotelBookingDetail    errors: [Error!]    warnings: [Warning!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields stats(StatsRequest):   auditData(AuditData):   booking(HotelBookingDetail):   errors([Error!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelBooking</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbooking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbooking/</guid>
      <description>
        
        
        GraphQL schema definition type HotelBooking {  stats( token: String!, ): StatsRequest    auditData: AuditData    bookings: [HotelBookingDetail!]    errors: [Error!]    warnings: [Warning!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields stats(StatsRequest):   auditData(AuditData):   bookings([HotelBookingDetail!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelBookingDetail</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbookingdetail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelbookingdetail/</guid>
      <description>
        
        
        GraphQL schema definition type HotelBookingDetail {  reference: Reference!    holder: Holder    hotel: BookingHotel    price: Price    quotePrice: PriceChange    cancelPolicy: CancelPolicy    remarks: String    status: BookStatusType!    billingSupplierCode: String    payable: String    addOns: AddOns   Show deprecated fields   }    window.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelCancelDetail</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelcanceldetail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelcanceldetail/</guid>
      <description>
        
        
        GraphQL schema definition type HotelCancelDetail {  reference: Reference    cancelReference: String    status: BookStatusType    price: Price    booking: HotelBookingDetail   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields reference(Reference):   cancelReference(String):   status(BookStatusType):   price(Price):   booking(HotelBookingDetail):
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelCancelPayload</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelcancelpayload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelcancelpayload/</guid>
      <description>
        
        
        GraphQL schema definition type HotelCancelPayload {  stats( token: String!, ): StatsRequest    auditData: AuditData    cancellation: HotelCancelDetail    errors: [Error!]    warnings: [Warning!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields stats(StatsRequest):   auditData(AuditData):   cancellation(HotelCancelDetail):   errors([Error!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelConnection</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelconnection/</guid>
      <description>
        
        
        GraphQL schema definition type HotelConnection {  edges: [HotelEdge]    count: Int!    token: String    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([HotelEdge]):   count(Int!):   token(String):   pageInfo(PageInfo!):
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelData</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hoteldata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hoteldata/</guid>
      <description>
        
        
        GraphQL schema definition type HotelData {  code: ID!    hotelCode: String!    hotelCodeSupplier: String    giataData: GiataData    hotelName: String    categoryCode: String    property: Property    chainCode: String    exclusiveDeal: Boolean!    location: Location!    contact: Contact    rank: [Int!]!    cardTypes: [PaymentCardType!]    amenities: [Amenity!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelEdge</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hoteledge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hoteledge/</guid>
      <description>
        
        
        GraphQL schema definition type HotelEdge {  node: Hotel    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Hotel):   cursor(String!):   
Required by HotelConnection:
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelOptionQuote</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hoteloptionquote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hoteloptionquote/</guid>
      <description>
        
        
        GraphQL schema definition type HotelOptionQuote {  optionRefId: String!    status: StatusType!    price: Price!    searchPrice: PriceChange    cancelPolicy: CancelPolicy!    remarks: String    surcharges: [Surcharge!]    cardTypes: [PaymentCardType!]    addOns: AddOns   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelOptionSearch</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hoteloptionsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hoteloptionsearch/</guid>
      <description>
        
        
        GraphQL schema definition type HotelOptionSearch {  supplierCode: String!    accessCode: String!    market: String!    hotelCode: String!    hotelCodeSupplier: String!    hotelName: String    boardCode: String!    boardCodeSupplier: String!    paymentType: PaymentType!    status: StatusType!    occupancies: [Occupancy!]!    rooms: [Room!]!    price: Price!    supplements: [Supplement!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelQuote</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelquote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelquote/</guid>
      <description>
        
        
        GraphQL schema definition type HotelQuote {  stats( token: String!, ): StatsRequest    auditData: AuditData    optionQuote: HotelOptionQuote    errors: [Error!]    warnings: [Warning!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields stats(StatsRequest):   auditData(AuditData):   optionQuote(HotelOptionQuote):   errors([Error!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Hotel-X: HotelRuntimeConfiguration</title>
      <link>https://docs.travelgatex.com/hotel-x/reference/objects/hotelruntimeconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/hotel-x/reference/objects/hotelruntimeconfiguration/</guid>
      <description>
        
        
        GraphQL schema definition type HotelRuntimeConfiguration {  code: ID!    hotelRuntimeConfigurationData: HotelRuntimeConfigurationData    createdAt: DateTime!    updatedAt: DateTime!    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   hotelRuntimeConfigurationData(HotelRuntimeConfigurationData):   createdAt(DateTime!
        
          [...]
        
      </description>
    </item>
    
  </channel>
</rss>