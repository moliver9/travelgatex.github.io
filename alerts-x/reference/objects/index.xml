<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation â€“ Objects</title>
    <link>https://docs.travelgatex.com/alerts-x/reference/objects/</link>
    <description>Recent changes in Objects on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <image>
      <url>https://docs.travelgatex.com/img/hugo.png</url>
      <title>GoHugo.io</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/</link>
    </image>
    
	    <atom:link href="https://docs.travelgatex.com/alerts-x/reference/objects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Alerts-X: API</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/api/</guid>
      <description>
        
        
        GraphQL schema definition type API {  code: ID!    apiData: APIData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   apiData(APIData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: APIConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/apiconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/apiconnection/</guid>
      <description>
        
        
         GraphQL schema definition type APIConnection {  edges: [APIEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([APIEdge]):   pageInfo(PageInfo!):    Required by GroupData:    GroupCommonData:    ResourceData:    OrganizationData:    ProductData:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: APIData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/apidata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/apidata/</guid>
      <description>
        
        
        GraphQL schema definition type APIData {  code: ID!    id: ID!    isEditable: Boolean!    label: String    groups(    codes: [ID!],     type: GroupType,     first: Int,     last: Int,     before: String,     after: String,     ): GroupConnection    resources(    codes: [ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: APIEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/apiedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/apiedge/</guid>
      <description>
        
        
         GraphQL schema definition type APIEdge {  node: API    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(API):   cursor(String!):    Required by APIConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Access</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/access/</guid>
      <description>
        
        
        GraphQL schema definition type Access {  code: ID!    accessData: AccessData    error: [Error!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   accessData(AccessData):   error([Error!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AccessConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/accessconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/accessconnection/</guid>
      <description>
        
        
        GraphQL schema definition type AccessConnection {  edges: [AccessEdge]    pageInfo: PageInfo!    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    totalCount: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([AccessEdge]):   pageInfo(PageInfo!):   adviseMessage([AdviseMessage!]):   totalCount(Int!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AccessData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/accessdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/accessdata/</guid>
      <description>
        
        
        GraphQL schema definition type AccessData {  name: String!    isActive: Boolean!    code: ID!    supplier: Supplier!    isTest: Boolean!    user: String    password: String    urls: Urls    parameters: [Parameter]    markets: [String!]    rateRules: [RateRulesType!]    shared: Access    owner: Organization    updateDescriptiveInfo: Int!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AccessEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/accessedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/accessedge/</guid>
      <description>
        
        
         GraphQL schema definition type AccessEdge {  node: Access    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Access):   cursor(String!):    Required by AccessConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AdviseMessage</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/advisemessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/advisemessage/</guid>
      <description>
        
        
        GraphQL schema definition type AdviseMessage {  code: ID!    description: String!    level: AdviseMessageLevel!    external: ExternalMessage    correlationID: ID!   Show deprecated fields   type: : String! // deprecated from 2018-06-01     }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Alert</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alert/</guid>
      <description>
        
        
        Alert node
GraphQL schema definition type Alert {  code: ID!    alertData: AlertData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertConfiguration</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alertconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alertconfiguration/</guid>
      <description>
        
        
        GraphQL schema definition type AlertConfiguration {  alertType: AlertType!    periodicity: Int    window: Int    timesToAlert: Int!    timesToRecovery: Int!    typeConfiguration: AlertTypeConfiguration    noRecoveries: Boolean!    stateChangesOnly: Boolean!    minNumberRequests: Int!    percentageToAlert: Int    email( type: EmailType, ): [Email]!    hubStatus( isInclusive: Boolean!, ): [HubStatus!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alertconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alertconnection/</guid>
      <description>
        
        
         Alert list
GraphQL schema definition type AlertConnection {  edges: [AlertEdge]    pageInfo: PageInfo!    count: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([AlertEdge]):   pageInfo(PageInfo!):   count(Int!):    Required by AlertData:    AlertsXQuery:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alertdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alertdata/</guid>
      <description>
        
        
        GraphQL schema definition type AlertData {  code: ID!    name: String    description: String    configuration: AlertConfiguration!    isActive: Boolean!    history( relay: RelayInput, filter: AlertFilterInput, ): AlertConnection!    editor: Member!    events( relay: RelayInput, filter: AlertFilterInput, ): EventConnection!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alertedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alertedge/</guid>
      <description>
        
        
         GraphQL schema definition type AlertEdge {  node: Alert    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Alert):   cursor(String!):    Required by AlertConnection:  Alert list   
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertPrice</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alertprice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alertprice/</guid>
      <description>
        
        
        Price contains the specific configuration for Price alert Type
GraphQL schema definition type AlertPrice {  mode: ModePrice!    check: CheckPrice!    range: RangePrice!    amount: Int    commission: Int   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields mode(ModePrice!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: AlertTypeConfiguration</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/alerttypeconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/alerttypeconfiguration/</guid>
      <description>
        
        
        Depending on the talert type, typeConfiguration will use some fields
GraphQL schema definition type AlertTypeConfiguration {  historicalWindow: Int    offset: Int    max_average: Int    toCheck: [Int!]    toCompare: [Int!]    price: AlertPrice   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Client</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/client/</guid>
      <description>
        
        
        GraphQL schema definition type Client {  code: ID!    clientData: ClientData    error: [Error!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   clientData(ClientData):   error([Error!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ClientConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/clientconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/clientconnection/</guid>
      <description>
        
        
        GraphQL schema definition type ClientConnection {  edges: [ClientEdge]    pageInfo: PageInfo!    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    totalCount: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([ClientEdge]):   pageInfo(PageInfo!):   adviseMessage([AdviseMessage!]):   totalCount(Int!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ClientData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/clientdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/clientdata/</guid>
      <description>
        
        
        GraphQL schema definition type ClientData {  code: ID!    name: ID!    isActive: Boolean!    group: Group    owner: Organization    suppliers(    first: Int,     last: Int,     before: String,     after: String,     filter: SupplierFilter,     ): SupplierConnection   Show deprecated fields   }    window.
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ClientEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/clientedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/clientedge/</guid>
      <description>
        
        
         GraphQL schema definition type ClientEdge {  node: Client    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Client):   cursor(String!):    Required by ClientConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Domain</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/domain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/domain/</guid>
      <description>
        
        
        GraphQL schema definition type Domain {  code: ID!    domainData: DomainData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   domainData(DomainData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: DomainData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/domaindata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/domaindata/</guid>
      <description>
        
        
         GraphQL schema definition type DomainData {  id: ID!    name: DomainName!    organization: Organization!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields id(ID!):   name(DomainName!):   organization(Organization!):    Required by Domain:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Entity</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/entity/</guid>
      <description>
        
        
        GraphQL schema definition type Entity {  code: ID!    entity: EntityData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   entity(EntityData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: EntityConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/entityconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/entityconnection/</guid>
      <description>
        
        
         GraphQL schema definition type EntityConnection {  edges: [EntityEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([EntityEdge]):   pageInfo(PageInfo!):    Required by ProfileData:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: EntityEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/entityedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/entityedge/</guid>
      <description>
        
        
         GraphQL schema definition type EntityEdge {  node: Entity    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Entity):   cursor(String!):    Required by EntityConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Error</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/error/</guid>
      <description>
        
        
         GraphQL schema definition type Error {  code: String!    type: String!    description: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String!):   type(String!):   description(String!):    
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Event</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/event/</guid>
      <description>
        
        
        Event triggered
GraphQL schema definition type Event {  code: ID!    eventData: EventData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: EventConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/eventconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/eventconnection/</guid>
      <description>
        
        
         Events list
GraphQL schema definition type EventConnection {  edges: [EventEdge]    pageInfo: PageInfo!    count: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([EventEdge]):   pageInfo(PageInfo!):   count(Int!):    Required by AlertData:    EventData:  Event data   
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: EventData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/eventdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/eventdata/</guid>
      <description>
        
        
        Event data
GraphQL schema definition type EventData {  code: ID!    groupBy: String    status: EventType!    details: String!    history( relay: RelayInput, filter: AlertFilterInput, ): EventConnection!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: EventEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/eventedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/eventedge/</guid>
      <description>
        
        
         GraphQL schema definition type EventEdge {  node: Event    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Event):   cursor(String!):    Required by EventConnection:  Events list   
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ExternalMessage</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/externalmessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/externalmessage/</guid>
      <description>
        
        
         GraphQL schema definition type ExternalMessage {  code: String    message: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(String):   message(String!):    Required by AdviseMessage:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Group</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/group/</guid>
      <description>
        
        
        GraphQL schema definition type Group {  code: ID!    groupData: GroupData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   groupData(GroupData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: GroupConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/groupconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/groupconnection/</guid>
      <description>
        
        
        GraphQL schema definition type GroupConnection {  edges: [GroupEdge]    pageInfo: PageInfo!    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    totalCount: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([GroupEdge]):   pageInfo(PageInfo!):   adviseMessage([AdviseMessage!]):   totalCount(Int!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: GroupData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/groupdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/groupdata/</guid>
      <description>
        
        
        GraphQL schema definition type GroupData {  id: ID!    code: ID!    label: String    type: GroupType!    info: String    parent: Group    children(    codes: [ID!],     first: Int,     last: Int,     before: String,     after: String,     type: GroupType,     codeStartsWith: String,     ): GroupConnection    descendents(    codes: [ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: GroupEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/groupedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/groupedge/</guid>
      <description>
        
        
         GraphQL schema definition type GroupEdge {  node: Group    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Group):   cursor(String!):    Required by GroupConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: LegacyLink</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/legacylink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/legacylink/</guid>
      <description>
        
        
         GraphQL schema definition type LegacyLink {  hubUser: Client!    hubProvider: Supplier!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields hubUser(Client!):   hubProvider(Supplier!):    Required by AccessData:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MacroPermission</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/macropermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/macropermission/</guid>
      <description>
        
        
        GraphQL schema definition type MacroPermission {  code: ID!    macroPermissionData: MacroPermissionData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   macroPermissionData(MacroPermissionData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MacroPermissionData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissiondata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissiondata/</guid>
      <description>
        
        
        GraphQL schema definition type MacroPermissionData {  id: ID!    code: ID!    productID: ID!    group: ID!    label: String    permissions: [Permission]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields id(ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MacroPermissionEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissionedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissionedge/</guid>
      <description>
        
        
         GraphQL schema definition type MacroPermissionEdge {  node: MacroPermission    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(MacroPermission):   cursor(String!):    Required by MacroPermissionsConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MacroPermissionsConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissionsconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/macropermissionsconnection/</guid>
      <description>
        
        
         GraphQL schema definition type MacroPermissionsConnection {  edges: [MacroPermissionEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([MacroPermissionEdge]):   pageInfo(PageInfo!):    Required by MemberData:    ProductData:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ManagedGroup</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroup/</guid>
      <description>
        
        
        GraphQL schema definition type ManagedGroup {  code: ID!    managedGroupData: ManagedGroupData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   managedGroupData(ManagedGroupData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ManagedGroupConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupconnection/</guid>
      <description>
        
        
         GraphQL schema definition type ManagedGroupConnection {  edges: [ManagedGroupEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([ManagedGroupEdge]):   pageInfo(PageInfo!):    Required by GroupData:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ManagedGroupData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupdata/</guid>
      <description>
        
        
        GraphQL schema definition type ManagedGroupData {  code: ID!    group: Group!    api: API!    resource: Resource!    role: Role!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   group(Group!):   api(API!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: ManagedGroupEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/managedgroupedge/</guid>
      <description>
        
        
         GraphQL schema definition type ManagedGroupEdge {  node: ManagedGroup    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(ManagedGroup):   cursor(String!):    Required by ManagedGroupConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Member</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/member/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/member/</guid>
      <description>
        
        
        GraphQL schema definition type Member {  code: ID!    memberData: MemberData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   memberData(MemberData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MemberConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/memberconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/memberconnection/</guid>
      <description>
        
        
        GraphQL schema definition type MemberConnection {  edges: [MemberEdge]    pageInfo: PageInfo!    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    totalCount: Int!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([MemberEdge]):   pageInfo(PageInfo!):   adviseMessage([AdviseMessage!]):   totalCount(Int!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MemberData</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/memberdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/memberdata/</guid>
      <description>
        
        
        GraphQL schema definition type MemberData {  id: ID!    code: ID!    label: String    isActive: Boolean!    type: MemberType!    groups(    codes: [ID!],     type: GroupType,     first: Int,     last: Int,     before: String,     after: String,     ): GroupConnection    roles(    codes: [ID!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: MemberEdge</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/memberedge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/memberedge/</guid>
      <description>
        
        
         GraphQL schema definition type MemberEdge {  node: Member    cursor: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields node(Member):   cursor(String!):    Required by MemberConnection:     
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: Operation</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/operation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/operation/</guid>
      <description>
        
        
        GraphQL schema definition type Operation {  code: ID!    operationData: OperationData    adviseMessage( level: [AdviseMessageLevel], ): [AdviseMessage!]    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!):   operationData(OperationData):   adviseMessage([AdviseMessage!
        
          [...]
        
      </description>
    </item>
    
    <item>
      <title>Alerts-X: OperationConnection</title>
      <link>https://docs.travelgatex.com/alerts-x/reference/objects/operationconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.travelgatex.com/alerts-x/reference/objects/operationconnection/</guid>
      <description>
        
        
         GraphQL schema definition type OperationConnection {  edges: [OperationEdge]    pageInfo: PageInfo!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields edges([OperationEdge]):   pageInfo(PageInfo!):    Required by APIData:     
        
      </description>
    </item>
    
  </channel>
</rss>